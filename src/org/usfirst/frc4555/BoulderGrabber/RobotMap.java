// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4555.BoulderGrabber;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static DoubleSolenoid clawDoubleSolenoid1;
    public static DoubleSolenoid puncherDoubleSolenoid2;
    public static DoubleSolenoid wedgeDoubleSolenoid3;
    
    
    public static SpeedController drivetrainSpeedController1;
    public static SpeedController drivetrainSpeedController2;
    public static SpeedController drivetrainSpeedController3;
    public static SpeedController drivetrainSpeedController4;
    public static RobotDrive driveTrainRobotDrive41;
    
    public static SpeedController armsSpeedController1;
    public static SpeedController armsSpeedController2;
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
  
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR    	

    	clawDoubleSolenoid1 = new DoubleSolenoid(0, 0, 7);
        LiveWindow.addActuator("Claw", "Double Solenoid 1", clawDoubleSolenoid1);
        
        puncherDoubleSolenoid2 = new DoubleSolenoid(0, 1, 6);
        LiveWindow.addActuator("Puncher", "Double Solenoid 2", puncherDoubleSolenoid2);
        
        wedgeDoubleSolenoid3 = new DoubleSolenoid(0, 2, 5);
        LiveWindow.addActuator("Wedge", "Double Solenoid 3", wedgeDoubleSolenoid3);
        
        
        drivetrainSpeedController1 = new Talon(0);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 1", (Talon) drivetrainSpeedController1);
        
        drivetrainSpeedController2 = new Talon(1);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 2", (Talon) drivetrainSpeedController2);
        
        drivetrainSpeedController3 = new Talon(2);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 3", (Talon) drivetrainSpeedController3);
        
        drivetrainSpeedController4 = new Talon(3);
        LiveWindow.addActuator("Drivetrain", "Speed Controller 4", (Talon) drivetrainSpeedController4);
        
        driveTrainRobotDrive41 = new RobotDrive(drivetrainSpeedController1, drivetrainSpeedController2,
              drivetrainSpeedController3, drivetrainSpeedController4);
        
        armsSpeedController1 = new Talon(4);
        LiveWindow.addActuator("Arms", "Speed Controller 5", (Talon) armsSpeedController1);
        
        armsSpeedController2 = new Talon(5);
        LiveWindow.addActuator("Arms", "Speed Controller 6", (Talon) armsSpeedController2);
        
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(.75);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
